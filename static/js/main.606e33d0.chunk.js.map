{"version":3,"sources":["components/AddTodoForm.tsx","components/Footer.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/Hello404.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["AddTodoForm","onTodoAdd","useState","title","setTitle","onSubmit","event","preventDefault","id","userId","completed","type","className","placeholder","value","onChange","target","Footer","clearCompleted","activeTodosLength","completedTodosLength","to","isActive","onClick","TodoItem","todo","onTodoDelete","onTodoUpdate","inputTitle","setInputTitle","editing","setEditing","inputElement","useRef","escFunction","useCallback","keyCode","current","blur","classNames","onDoubleClick","document","addEventListener","requestAnimationFrame","focus","checked","ref","onBlur","removeEventListener","onKeyPress","key","TodoList","todos","map","Hello404","getUser","a","fetch","user","json","todosAPI","getTodos","postTodo","method","headers","body","JSON","stringify","catch","error","window","location","replace","process","addedTodo","deleteTodo","todoId","updateTodo","propsToUpdate","App","setTodos","setUser","useEffect","Promise","all","then","responce","userFromServer","todosFromServer","completedTodos","useMemo","filter","activeTodos","newTodo","oldTodos","onToggleAllChange","forEach","name","length","every","htmlFor","path","element","ReactDOM","render","getElementById"],"mappings":"gTAoCeA,EA5BsB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACtC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OACE,sBAAMC,SAba,SAACC,GACpBA,EAAMC,iBAENN,EAAU,CACRO,GAAI,EACJL,QACAM,OAAQ,KACRC,WAAW,IAEbN,EAAS,KAIT,SACE,uBACEO,KAAK,OACLC,UAAU,WACVC,YAAY,yBACZC,MAAOX,EACPY,SAAU,SAAAT,GAAK,OAAIF,EAASE,EAAMU,OAAOF,aC0BlCG,EA/CiB,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,eAAgBC,EAA8C,EAA9CA,kBAAmBC,EAA2B,EAA3BA,qBACpE,OACE,yBAAQR,UAAU,SAAlB,UACE,sBAAMA,UAAU,aAAhB,mBACMO,EADN,iBAIA,qBAAIP,UAAU,UAAd,UACE,6BACE,cAAC,IAAD,CACES,GAAG,IACHT,UAAW,qBAAGU,SAA2B,WAAa,IAFxD,mBAOF,6BACE,cAAC,IAAD,CACED,GAAG,UACHT,UAAW,qBAAGU,SAA2B,WAAa,IAFxD,sBAOF,6BACE,cAAC,IAAD,CACED,GAAG,aACHT,UAAW,qBAAGU,SAA2B,WAAa,IAFxD,4BASHF,EAAuB,GACtB,wBACET,KAAK,SACLC,UAAU,kBACVW,QAASL,EAHX,iC,iBCkDOM,EAjFmB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACvD,EAAoCzB,mBAASuB,EAAKtB,OAAlD,mBAAOyB,EAAP,KAAmBC,EAAnB,KAEA,EAA8B3B,oBAAS,GAAvC,mBAAO4B,EAAP,KAAgBC,EAAhB,KAEMC,EAAeC,iBAAyB,MAUxCC,EAAcC,uBAAY,SAAC7B,GACJ,IAAD,EAAJ,KAAlBA,EAAM8B,UACRP,EAAcJ,EAAKtB,OACnB,UAAA6B,EAAaK,eAAb,SAAsBC,UAEvB,CAACb,IAmBJ,OACE,qBAEEb,UAAW2B,IACT,CAAE7B,UAAWe,EAAKf,WAClB,CAAEoB,YAEJU,cAAe,WACbT,GAAW,GACXU,SAASC,iBAAiB,QAASR,GACnCS,uBAAsB,WAAO,IAAD,EAC1B,UAAAX,EAAaK,eAAb,SAAsBO,YAV5B,UAcE,sBAAKhC,UAAU,OAAf,UACE,uBACED,KAAK,WACLC,UAAU,SACViC,QAASpB,EAAKf,UACdK,SAAU,SAACT,GAAD,OApDOI,EAoDoBJ,EAAMU,OAAO6B,aAnDxDlB,EAAaF,EAAKjB,GAAI,CAAEE,cADF,IAACA,KAsDnB,gCAAQe,EAAKtB,QACb,wBACEQ,KAAK,SACLC,UAAU,UACVW,QAAS,kBAAMG,EAAaD,EAAKjB,UAGrC,uBACEG,KAAK,OACLC,UAAU,OACVkC,IAAKd,EACLlB,MAAOc,EACPb,SAAU,SAAAT,GAAK,OAAIuB,EAAcvB,EAAMU,OAAOF,QAC9CiC,OA9Cc,WAjBA,IAAC5C,EAkBnB4B,GAAW,GACNH,EAEMA,IAAeH,EAAKtB,QArBZA,EAsBLyB,EArBdD,EAAaF,EAAKjB,GAAI,CAAEL,WAmBtBuB,EAAaD,EAAKjB,IAKpBiC,SAASO,oBAAoB,QAASd,IAuClCe,WArDmB,SAAC3C,GACI,IAAD,EAAT,UAAdA,EAAM4C,MACR,UAAAlB,EAAaK,eAAb,SAAsBC,aAiBjBb,EAAKjB,KC3BD2C,EAbmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAO1B,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,aAAxB,OAChC,oBAAIf,UAAU,YAAd,SACGwC,EAAMC,KAAI,SAAA5B,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,aAAcA,GAHTF,EAAKjB,UCdH8C,EAFY,kBAAO,0DCGrBC,EAAO,uCAAG,4BAAAC,EAAA,sEACFC,MAAM,GAAD,OAJT,0CAIS,YAHX,SAEQ,cACfC,EADe,yBAGdA,EAAKC,QAHS,2CAAH,qDCHdC,EAAW,0CAEJC,EAAQ,uCAAG,4BAAAL,EAAA,sEACFC,MAAM,GAAD,OAAIG,EAAJ,iBADH,cAChBR,EADgB,yBAGfA,EAAMO,QAHS,2CAAH,qDAMRG,EAAQ,uCAAG,WAAOrC,GAAP,qBAAA+B,EAAA,6DACdrD,EAA6BsB,EAA7BtB,MAAOM,EAAsBgB,EAAtBhB,OAAQC,EAAce,EAAdf,UADD,SAEE+C,MAAMG,EAAU,CACtCG,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAU,CACnBhE,QACAM,SACAC,gBAGD0D,OAAM,SAACC,GAGN,OAFAC,OAAOC,SAASC,QAAhB,UAA2BC,IAA3B,cAEOJ,KAhBW,cAEhBK,EAFgB,yBAmBfA,EAAUf,QAnBK,2CAAH,sDAsBRgB,EAAU,uCAAG,WAAOC,GAAP,SAAApB,EAAA,+EACjBC,MAAM,GAAD,OAAIG,EAAJ,YAAgBgB,GAAU,CAAEb,OAAQ,WAC7CK,OAAM,kBAAME,OAAOC,SAASC,QAAhB,UAA2BC,IAA3B,kBAFS,2CAAH,sDAKVI,EAAU,uCAAG,WAAOD,EAAgBE,GAAvB,SAAAtB,EAAA,+EACjBC,MAAM,GAAD,OAAIG,EAAJ,YAAgBgB,GAAU,CACpCb,OAAQ,QACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAUW,KAEpBV,OAAM,kBAAME,OAAOC,SAASC,QAAhB,UAA2BC,IAA3B,kBARS,2CAAH,wDC+HRM,EA3IO,WACpB,MAA0B7E,mBAAiB,IAA3C,mBAAOkD,EAAP,KAAc4B,EAAd,KACA,EAAwB9E,mBAAsB,MAA9C,mBAAOwD,EAAP,KAAauB,EAAb,KAEAC,qBAAU,WACRC,QAAQC,IAAI,CAAC7B,IAAWM,MACrBwB,MAAK,SAAAC,GACJ,kBAA0CA,EAA1C,GAAOC,EAAP,KAAuBC,EAAvB,KAEAP,EAAQM,GACRP,EAASQ,QAEZ,IAEH,IAAMC,EAAiBC,mBACrB,kBAAMtC,EAAMuC,QAAO,SAAAlE,GAAI,OAAIA,EAAKf,eAChC,CAAC0C,IAGGwC,EAAcF,mBAClB,kBAAMtC,EAAMuC,QAAO,SAAAlE,GAAI,OAAKA,EAAKf,eACjC,CAAC0C,IAGGnD,EAAYkC,sBAAW,uCAAC,WAAO0D,GAAP,eAAArC,EAAA,sEACJM,EAAS+B,GADL,OACtBnB,EADsB,OAG5BM,EAAS,GAAD,mBAAK5B,GAAL,CAAYsB,KAHQ,2CAAD,sDAI1B,CAACtB,IAEEzB,EAAeQ,sBAAW,uCAAC,WAAOyC,EAAgBE,GAAvB,SAAAtB,EAAA,sEACzBqB,EAAWD,EAAQE,GADM,OAG/BE,GAAS,SAACc,GAAD,OAAcA,EAASzC,KAAI,SAAA5B,GAClC,OAAIA,EAAKjB,KAAOoE,EACP,2BAAKnD,GAASqD,GAGhBrD,QARsB,2CAAD,wDAU7B,CAAC2B,IAEE1B,EAAeS,sBAAW,uCAAC,WAAOyC,GAAP,SAAApB,EAAA,sEACzBmB,EAAWC,GADc,OAG/BI,GAAS,SAACc,GAAD,OAAcA,EAASH,QAAO,SAAAlE,GAAI,OAAIA,EAAKjB,KAAOoE,QAH5B,2CAAD,sDAI7B,CAACxB,IAEE2C,EAAoB5D,sBAAW,uCAAC,WAAO7B,GAAP,SAAAkD,EAAA,sDAChClD,EAAMU,OAAO6B,QACfO,EAAM4C,SAAQ,SAAAvE,GACZE,EAAaF,EAAKjB,GAAI,CAAEE,WAAW,OAGrC0C,EAAM4C,SAAQ,SAAAvE,GACZE,EAAaF,EAAKjB,GAAI,CAAEE,WAAW,OAPH,2CAAD,sDAUlC,CAAC0C,IAEElC,EAAiBiB,sBAAW,sBAAC,sBAAAqB,EAAA,sDACjCJ,EAAM4C,SAAQ,SAAAvE,GACRA,EAAKf,WACPgB,EAAaD,EAAKjB,OAHW,2CAMhC,CAAC4C,IAEJ,OACE,0BAASxC,UAAU,UAAnB,UACE,yBAAQA,UAAU,SAAlB,UACE,wCAAY,OAAJ8C,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,OAAQ,aAAtB,YAEA,cAAC,EAAD,CAAahG,UAAWA,OAG1B,0BAASW,UAAU,OAAnB,UACGwC,EAAM8C,OAAS,GACd,qCACE,uBACEvF,KAAK,WACLH,GAAG,aACHI,UAAU,aACViC,QAASO,EAAM+C,OAAM,SAAA1E,GAAI,OAAIA,EAAKf,aAClCK,SAAUgF,IAEZ,uBAAOK,QAAQ,aAAf,qCAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,IACLC,QACE,cAAC,EAAD,CACElD,MAAOA,EACP1B,aAAcA,EACdC,aAAcA,MAIpB,cAAC,IAAD,CACE0E,KAAK,UACLC,QACE,cAAC,EAAD,CACElD,MAAOwC,EACPlE,aAAcA,EACdC,aAAcA,MAIpB,cAAC,IAAD,CACE0E,KAAK,aACLC,QACE,cAAC,EAAD,CACElD,MAAOqC,EACP/D,aAAcA,EACdC,aAAcA,MAIpB,cAAC,IAAD,CACE0E,KAAK,IACLC,QAAS,cAAC,EAAD,YAKdlD,EAAM8C,OAAS,GACd,cAAC,EAAD,CACEhF,eAAgBA,EAChBC,kBAAmByE,EAAYM,OAC/B9E,qBAAsBqE,EAAeS,aCpJ/CK,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEF/D,SAASgE,eAAe,W","file":"static/js/main.606e33d0.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { Todo } from '../types/todo';\n\ntype Props = {\n  onTodoAdd: (newTodo: Todo) => Promise<void>\n};\n\nconst AddTodoForm: React.FC<Props> = ({ onTodoAdd }) => {\n  const [title, setTitle] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onTodoAdd({\n      id: 0,\n      title,\n      userId: 2450,\n      completed: false,\n    });\n    setTitle('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n      />\n    </form>\n  );\n};\n\nexport default AddTodoForm;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  clearCompleted: () => void\n  activeTodosLength: number\n  completedTodosLength: number\n};\n\nconst Footer: React.FC<Props> = ({ clearCompleted, activeTodosLength, completedTodosLength }) => {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${activeTodosLength} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => (isActive ? 'selected' : '')}\n          >\n            All\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/active\"\n            className={({ isActive }) => (isActive ? 'selected' : '')}\n          >\n            Active\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/completed\"\n            className={({ isActive }) => (isActive ? 'selected' : '')}\n          >\n            Completed\n          </NavLink>\n        </li>\n      </ul>\n\n      {completedTodosLength > 0 && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nexport default Footer;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useCallback, useRef, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Todo, TodoPropsToUpdate } from '../types/todo';\n\ntype Props = {\n  todo: Todo\n  onTodoDelete: (todoId: number) => void\n  onTodoUpdate: (todoId: number, propsToUpdate: TodoPropsToUpdate) => Promise<void>\n};\n\nconst TodoItem: React.FC<Props> = ({ todo, onTodoDelete, onTodoUpdate }) => {\n  const [inputTitle, setInputTitle] = useState(todo.title);\n\n  const [editing, setEditing] = useState(false);\n\n  const inputElement = useRef<HTMLInputElement>(null);\n\n  const updateCompleted = (completed: boolean) => {\n    onTodoUpdate(todo.id, { completed });\n  };\n\n  const updateTitle = (title: string) => {\n    onTodoUpdate(todo.id, { title });\n  };\n\n  const escFunction = useCallback((event) => {\n    if (event.keyCode === 27) {\n      setInputTitle(todo.title);\n      inputElement.current?.blur();\n    }\n  }, [todo]);\n\n  const handleEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      inputElement.current?.blur();\n    }\n  };\n\n  const onInputBlur = () => {\n    setEditing(false);\n    if (!inputTitle) {\n      onTodoDelete(todo.id);\n    } else if (inputTitle !== todo.title) {\n      updateTitle(inputTitle);\n    }\n\n    document.removeEventListener('keyup', escFunction);\n  };\n\n  return (\n    <li\n      key={todo.id}\n      className={classNames(\n        { completed: todo.completed },\n        { editing },\n      )}\n      onDoubleClick={() => {\n        setEditing(true);\n        document.addEventListener('keyup', escFunction);\n        requestAnimationFrame(() => {\n          inputElement.current?.focus();\n        });\n      }}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={(event) => updateCompleted(event.target.checked)}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => onTodoDelete(todo.id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        ref={inputElement}\n        value={inputTitle}\n        onChange={event => setInputTitle(event.target.value)}\n        onBlur={onInputBlur}\n        onKeyPress={handleEnterPress}\n      />\n    </li>\n  );\n};\n\nexport default TodoItem;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\n\nimport TodoItem from './TodoItem';\n\nimport { Todo, TodoPropsToUpdate } from '../types/todo';\n\ntype Props = {\n  todos: Todo[]\n  onTodoDelete: (todoId: number) => void\n  onTodoUpdate: (todoId: number, propsToUpdate: TodoPropsToUpdate) => Promise<void>\n};\n\nconst TodoList: React.FC<Props> = ({ todos, onTodoDelete, onTodoUpdate }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        onTodoDelete={onTodoDelete}\n        onTodoUpdate={onTodoUpdate}\n      />\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React from 'react';\n\nconst Hello404: React.FC = () => (<h1>Something went wrong...</h1>);\n\nexport default Hello404;\n","import { User } from '../types/user';\n\nconst usersAPI = 'https://mate.academy/students-api/users';\nconst userID = '2450';\n\nexport const getUser = async (): Promise<User> => {\n  const user = await fetch(`${usersAPI}/${userID}`);\n\n  return user.json();\n};\n","import { Todo, TodoPropsToUpdate } from '../types/todo';\n\nconst todosAPI = 'https://mate.academy/students-api/todos';\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  const todos = await fetch(`${todosAPI}?userId=2450`);\n\n  return todos.json();\n};\n\nexport const postTodo = async (todo: Todo): Promise<Todo> => {\n  const { title, userId, completed } = todo;\n  const addedTodo = await fetch(todosAPI, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      title,\n      userId,\n      completed,\n    }),\n  })\n    .catch((error) => {\n      window.location.replace(`${process.env.PUBLIC_URL}/hello404`);\n\n      return error;\n    });\n\n  return addedTodo.json();\n};\n\nexport const deleteTodo = async (todoId: number) => {\n  return fetch(`${todosAPI}/${todoId}`, { method: 'DELETE' })\n    .catch(() => window.location.replace(`${process.env.PUBLIC_URL}/hello404`));\n};\n\nexport const updateTodo = async (todoId: number, propsToUpdate: TodoPropsToUpdate) => {\n  return fetch(`${todosAPI}/${todoId}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(propsToUpdate),\n  })\n    .catch(() => window.location.replace(`${process.env.PUBLIC_URL}/hello404`));\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport AddTodoForm from './components/AddTodoForm';\nimport Footer from './components/Footer';\nimport TodoList from './components/TodoList';\nimport Hello404 from './components/Hello404';\n\nimport { getUser } from './api/users';\nimport {\n  deleteTodo,\n  getTodos,\n  postTodo,\n  updateTodo,\n} from './api/todos';\n\nimport { Todo, TodoPropsToUpdate } from './types/todo';\nimport { User } from './types/user';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    Promise.all([getUser(), getTodos()])\n      .then(responce => {\n        const [userFromServer, todosFromServer] = responce;\n\n        setUser(userFromServer);\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const completedTodos = useMemo(\n    () => todos.filter(todo => todo.completed),\n    [todos],\n  );\n\n  const activeTodos = useMemo(\n    () => todos.filter(todo => !todo.completed),\n    [todos],\n  );\n\n  const onTodoAdd = useCallback(async (newTodo: Todo) => {\n    const addedTodo = await postTodo(newTodo);\n\n    setTodos([...todos, addedTodo]);\n  }, [todos]);\n\n  const onTodoUpdate = useCallback(async (todoId: number, propsToUpdate: TodoPropsToUpdate) => {\n    await updateTodo(todoId, propsToUpdate);\n\n    setTodos((oldTodos) => oldTodos.map(todo => {\n      if (todo.id === todoId) {\n        return { ...todo, ...propsToUpdate };\n      }\n\n      return todo;\n    }));\n  }, [todos]);\n\n  const onTodoDelete = useCallback(async (todoId: number) => {\n    await deleteTodo(todoId);\n\n    setTodos((oldTodos) => oldTodos.filter(todo => todo.id !== todoId));\n  }, [todos]);\n\n  const onToggleAllChange = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      todos.forEach(todo => {\n        onTodoUpdate(todo.id, { completed: true });\n      });\n    } else {\n      todos.forEach(todo => {\n        onTodoUpdate(todo.id, { completed: false });\n      });\n    }\n  }, [todos]);\n\n  const clearCompleted = useCallback(async () => {\n    todos.forEach(todo => {\n      if (todo.completed) {\n        onTodoDelete(todo.id);\n      }\n    });\n  }, [todos]);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>{`${user?.name || 'Loading...'} todos`}</h1>\n\n        <AddTodoForm onTodoAdd={onTodoAdd} />\n      </header>\n\n      <section className=\"main\">\n        {todos.length > 0 && (\n          <>\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              checked={todos.every(todo => todo.completed)}\n              onChange={onToggleAllChange}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          </>\n        )}\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={(\n              <TodoList\n                todos={todos}\n                onTodoDelete={onTodoDelete}\n                onTodoUpdate={onTodoUpdate}\n              />\n            )}\n          />\n          <Route\n            path=\"/active\"\n            element={(\n              <TodoList\n                todos={activeTodos}\n                onTodoDelete={onTodoDelete}\n                onTodoUpdate={onTodoUpdate}\n              />\n            )}\n          />\n          <Route\n            path=\"/completed\"\n            element={(\n              <TodoList\n                todos={completedTodos}\n                onTodoDelete={onTodoDelete}\n                onTodoUpdate={onTodoUpdate}\n              />\n            )}\n          />\n          <Route\n            path=\"*\"\n            element={<Hello404 />}\n          />\n        </Routes>\n      </section>\n\n      {todos.length > 0 && (\n        <Footer\n          clearCompleted={clearCompleted}\n          activeTodosLength={activeTodos.length}\n          completedTodosLength={completedTodos.length}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}